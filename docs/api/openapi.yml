# https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md
openapi: 3.0.3
info:
  title: Imaginary Store Inventory API.
  version: 1.0.0
  description: Provide information on inventory management in virtual stores.
  contact:
    email: ao.akua.leo@gmail.com
    name: Kenichi Inoue
    url: 'https://onesword0618.jp/'
  license:
    name: MIT License
    url: 'https://github.com/onesword0618/stockroom/blob/main/LICENSE'
servers:
  - url: 'http://localhost:{port}/{basePath}'
    variables:
      port:
        default: '8000'
        enum:
          - '8102'
          - '8103'
        description: Port Number
      basePath:
        default: v1
        enum:
          - v0
          - v2
        description: Version Control
    description: The Development API server
components:
  schemas:
    Stock:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        address:
          type: string
    GeneralError:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
  responses:
    NotFound:
      description: Entity not found.
    IllegalInput:
      description: Illegal input for operation.
    GeneralError:
      description: General Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GeneralError'
tags: [{
    name: stock controller,
    description: stock resource controller
  }]
paths:
  /stocks/{id}:
    get:
      tags:
        - stocks
      summary: Get stocks by ID.
      description: Returns a single Stock model
      parameters:
        - name: id
          in: path
          description: stock id
          required: true
          schema:
            type: integer
      # Need 305, 401, 403
      responses:
        '200':
          description: A single Stock model
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Stock'
                example:
                  - id : 1
                    name: First Stock Place
                    address: 1st Area
        '401':
          description: The syntax of the request is different.
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/responses/IllegalInput'
                example:
                  - code : 401
                    message: The syntax of the request is different.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/responses/NotFound'
                example:
                  - code : 404
                    message: The Stock Not Found.

